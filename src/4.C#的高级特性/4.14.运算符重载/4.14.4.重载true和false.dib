#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":"csharp"}]}}

#!csharp

/*
    4.14.4 重载true和false
    true和false运算符只会在那些本身有布尔语义但无法转换为bool的类型中重载（这种类型并不多见）。
    例如，一个类型实现了三个状态逻辑，通过重载true和false运算符，
    这个类型就可以无缝地和以下条件语句以及运算符一起使用了：
        if、do、while、for、&&、||和？:。
    System.Data.SqlTypes.SqlBoolean结构体就提供了这个功能：
*/

using System.Data.SqlTypes;

SqlBoolean a = SqlBoolean.Null;
if (a)
    Console.WriteLine("True");
else if (!a)
    Console.WriteLine("False");
else
    Console.WriteLine("Null");

// 输出为：Null

#!csharp

// 下面代码重新实现了SqlBoolean中关于true和false运算符的一部分代码：
public struct SqlBoolean
{
    public static bool operator true(SqlBoolean x)
      => x.m_value == True.m_value;

    public static bool operator false(SqlBoolean x)
      => x.m_value == False.m_value;

    public static SqlBoolean operator !(SqlBoolean x)
    {
        if (x.m_value == Null.m_value) return Null;
        if (x.m_value == False.m_value) return True;
        return False;
    }

    public static readonly SqlBoolean Null = new SqlBoolean(0);
    public static readonly SqlBoolean False = new SqlBoolean(1);
    public static readonly SqlBoolean True = new SqlBoolean(2);

    private SqlBoolean(byte value) { m_value = value; }
    private byte m_value;
}

#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":"csharp"}]}}

#!csharp

/*
    4.5.7 异常的替代方式
    在int.TryParse中，函数可以通过返回类型或者参数向调用函数返回错误代码。
    尽管对于简单的可预见的错误这个方式可行，但是针对所有的错误类型就显得捉襟见肘了。
    这样做不仅会使方法的签名晦涩，而且增加了不必要的复杂性，使代码变得混乱。
    此外，这种做法也不能推广到如运算符（例如，除法运算符）、属性等不是方法的函数上。
    此时一种替代方式是将错误放在一个公共的地方，使其对调用栈中所有的函数都可见（例如：每一个线程中存储当前错误的静态方法）。
    但是，这要求每一个函数都参与到这种错误传播模式中，其本身既冗长又容易出错。
*/
